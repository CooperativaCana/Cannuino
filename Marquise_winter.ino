// This sites tell you all about ESP8266 setup before to run the code in arduino.
// https://eldontronics.wordpress.com/2017/08/28/beginning-iot-with-esp8266-01-wifi-module-and-cayenne-iot-platform/

//Arduino Code
#include <CayenneMQTTESP8266Shield.h>
#include "RTClib.h"
#include <Wire.h>
#include "DHT.h"

char ssid[] = "NOS_Internet_Movel_C254_ext"; /// insert your network name
char wifiPassword[] = "04047761"; /// insert your router/device password

/// generated by cayenne login in arduino Mega2560 with ESP8266, choosing "Arduino Mega > Arduino Mega ESP8266 Wifi"
char username[] = "cd805270-4f14-11e9-b395-f53190c2ab6f";
char password[] = "dcb5452141ec23d783bcc0c0ef46b4a89e57cc5e";
char clientID[] = "83935af0-05c5-11ea-a38a-d57172a4b4d4";

// Comunnication between ESP8266 and Arduino thru TX1 and RX1
#define EspSerial Serial1 
ESP8266 wifi(&EspSerial);

//RTC1307 SDA SCL Connection
#if defined(ARDUINO_ARCH_SAMD)
#define Serial SerialUSB
#endif
RTC_DS1307 rtc;

//DHT22 Sensor
#define DHTPIN_veg 2    
#define DHTPIN_flo 3    
#define DHTTYPE DHT22   
DHT dht_flo(DHTPIN_flo, DHTTYPE); 
DHT dht_veg(DHTPIN_veg, DHTTYPE); 

//8 Channel Relay
#define rele_hps 42 
int rele_hpsOut = 42; 

#define rele_cfl 40 
int rele_cflOut = 40; 

#define rele_ctube 44 
int rele_ctubeOut = 44; 

#define rele_bomba_veg 46 
int rele_bomba_vegOut = 46; 

#define rele_valvula 34 
int rele_valvulaOut = 34;

#define rele_airpump 32 
int rele_airpumpOut = 32; 

#define rele_bomba_bloom 36 
int rele_lampada_vegetativoOut = 36;

#define rele_bomba_grow 38  
int rele_circulacao_vegetativoOut = 38;

// 1X EC meter + Watertemperature
void MedidorEc () {
Cayenne.virtualWrite(32, 0.8, "type", "Week1"); //week_1 | 3
Cayenne.virtualWrite(33, 0.9, "type", "Week2"); //week_2 | 5
Cayenne.virtualWrite(34, 1, "type", "Week3"); //week_3 | 7
Cayenne.virtualWrite(35, 1.1, "type", "Week4"); //week_4 | 9
Cayenne.virtualWrite(36, 1.3, "type", "Week5"); //week_5 | 11
Cayenne.virtualWrite(37, 1.4, "type", "Week6"); //week_6 | 13
Cayenne.virtualWrite(38, 1.5, "type", "Week7"); //week_7 | 15
Cayenne.virtualWrite(39, 1.7, "type", "Week8"); //week_8 | 17
Cayenne.virtualWrite(40, 1.9, "type", "Week9"); //week_9 | 19
Cayenne.virtualWrite(41, 1.4, "type", "Week10"); //week_10 | 21
Cayenne.virtualWrite(52, 6.5, "type", "Ph Bom");


}

//2 x Lights Operation
void timerLampadas () {
  DateTime now = rtc.now();
  if ((now.hour() >= 19 && now.hour() <= 23 ) or (now.hour() >= 0 && now.hour() <= 7 )) 
  {
    digitalWrite(rele_hps, HIGH);
    digitalWrite(rele_ctube, HIGH);
    Cayenne.virtualWrite(5, 1,"type", "Acesa");
  }
  else
  {
    digitalWrite(rele_hps, LOW);
    digitalWrite(rele_ctube, LOW);
    Cayenne.virtualWrite(5, 0,"type", "Apagada");
  }
  
  if ((now.hour() >= 18 && now.hour() <= 23 ) or (now.hour() >= 0 && now.hour() <= 12 )) 
  {
    digitalWrite(rele_cfl, HIGH);
    Cayenne.virtualWrite(8, 1, "type", "Acesa");
  }
  else
  {
    digitalWrite(rele_cfl, LOW);
    Cayenne.virtualWrite(8, 0, "type", "Apagada");
  }
}

//2x Temperature and Humidity sensors to Cayenne Monitoring
void temHumiCayenne() {
  float hum_veg = dht_veg.readHumidity() - 25; 
  float temp_veg = dht_veg.readTemperature();
  float hum_flo = dht_flo.readHumidity() - 25; 
  float temp_flo = dht_flo.readTemperature();
  Cayenne.virtualWrite(1, temp_veg, TYPE_TEMPERATURE, UNIT_CELSIUS); 
  Cayenne.virtualWrite(2, hum_veg, TYPE_RELATIVE_HUMIDITY, UNIT_PERCENT);
  Cayenne.virtualWrite(3, temp_flo, TYPE_TEMPERATURE, UNIT_CELSIUS); 
  Cayenne.virtualWrite(4, hum_flo, TYPE_RELATIVE_HUMIDITY, UNIT_PERCENT); 
}

//2x Capacitive Soil Sensors to Cayenne Monitoring
void soloCayenne() {
  int output_value_cfl;
  int solo_cfl = 0;
  int output_value_hps;
  int solo_hps = 0;
  solo_cfl = analogRead(A14);
  solo_hps = analogRead(A15);
  ///Dry: (520 430]     //// ( 609 - 590 - 560 ) | 0% a 23% dry 
  ///Wet: (430 350]     //// ( 560 - 455 - 350 ) | 24% a 64% wet 
  ///Water: (350 260]   //// ( 350 - 305 - 276 ) | 65% a 100% water
  //////map(value to be mapped, fromLow, fromHigh, toLow, toHigh)
  output_value_hps = map(solo_hps, 656, 276, 0, 100);
  output_value_cfl = map(solo_cfl, 651, 280, 0, 100);
 // Cayenne.virtualWrite(6, output_value_hps); 
  Cayenne.virtualWrite(6, output_value_hps, "Humidade_Solo", "Percentagem"); 
  Cayenne.virtualWrite(7, output_value_cfl, "Humidade_Solo", "Percentagem"); 
}
//1x Clock Time Readings to Cayenne Monitoring
void dataCayenne() {
  DateTime now = rtc.now();
  Cayenne.virtualWrite(26, now.hour());
  Cayenne.virtualWrite(27, now.minute());
  Cayenne.virtualWrite(31, now.day());
  Cayenne.virtualWrite(28, now.month());
}

// 2x Water Pum
// 2x Air Pump
// 1x ElectroValve
void RegaH2O() {
  int solo_cfl = 0;
  int solo_hps = 0;
  solo_cfl = analogRead(A14);
  solo_hps = analogRead(A15);
  DateTime now = rtc.now();
  if (solo_hps <= 450)
  {
    digitalWrite(rele_valvula, LOW);
     digitalWrite(rele_bomba_bloom, LOW);
  }
  if (solo_cfl <= 450)
  {
    digitalWrite(rele_bomba_veg, LOW);
    digitalWrite(rele_bomba_grow, LOW);
  }
  if (solo_hps >= 560)
  {
    digitalWrite(rele_valvula, HIGH);
  } 
   if (solo_hps >= 560)
  {
    digitalWrite(rele_bomba_veg, HIGH);
  }
  if (now.dayOfTheWeek() == 6)
  {
    digitalWrite(rele_airpump, HIGH);
    digitalWrite(rele_bomba_bloom, HIGH);
    digitalWrite(rele_bomba_grow, HIGH);
  }
  }



//4x Buttons to action in Cayenne
CAYENNE_IN(V17)
{
  if (getValue.asInt() == 1) {
    digitalWrite(rele_valvula, HIGH);
     }
  else {
    digitalWrite(rele_valvula, LOW);
   }
}

CAYENNE_IN(V18)
{
  if (getValue.asInt() == 1) {
    digitalWrite(rele_bomba_grow, HIGH);
  }
  else {
    digitalWrite(rele_bomba_grow, LOW);
  }
}

CAYENNE_IN(V19)
{
  if (getValue.asInt() == 1) {
    digitalWrite(rele_bomba_bloom, HIGH);
  }
  else {
    digitalWrite(rele_bomba_bloom, LOW);
  }
}

CAYENNE_IN(V20)
{
  if (getValue.asInt() == 1) {
    digitalWrite(rele_bomba_veg, HIGH);
  }
  else {
    digitalWrite(rele_bomba_veg, LOW);
  }
}

void setup()
{
  Serial.begin(9600);
 // delay(10);
  EspSerial.begin(115200);
  //delay(10);
  Cayenne.begin(username, password, clientID, wifi, ssid, wifiPassword);
  Wire.begin();
  
  ///  to get the rtc on'clock, run just one time the code with and then without
  //rtc.adjust(DateTime(2019, 10, 31, 1, 16, 0)); ///  to get the rtc on'clock, run just one time the code with and then without
  
  dht_veg.begin();
  dht_flo.begin();
  pinMode(32, OUTPUT); 
  pinMode(34, OUTPUT); 
  pinMode(36, OUTPUT); 
  pinMode(38, OUTPUT); 
  pinMode(40, OUTPUT); 
  pinMode(42, OUTPUT); 
  pinMode(44, OUTPUT);
  pinMode(46, OUTPUT); 
}

void loop() {
    Cayenne.loop(); // To upload/download the state of buttons in Cayenne
  timerLampadas ();
  MedidorEc();
  temHumiCayenne();
  soloCayenne();
  dataCayenne();
  RegaH2O();  
  //Cayenne.loop(); // To upload/download the state of buttons in Cayenne 
}
